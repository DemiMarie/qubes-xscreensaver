From 6973f3ce8b81ef9f01e1d131f7e759b353dc9cc6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Marczykowski-G=C3=B3recki?=
 <marmarek@invisiblethingslab.com>
Date: Tue, 20 Dec 2022 00:21:48 +0100
Subject: [PATCH] Use xshm to blank the screen even if no gradual fade is
 requested

It seems normal window modifications (like XClearWindow()) are ignored
when monitor is off (DPMS). When monitor is off already at the time
screen locker kicks in, it means clearing the screen doesn't work. When
the screen gets powered back on (to show login prompt), it gets properly
refreshed, but there is a tiny moment when original screen content is
visible.
While this applies to classic X11 drawing primitives, it appears that
XSHM works just fine even with screen off. XScreensaver already uses
XSHM for gradual fade-in, so call it also in case of instant blanking.
---
 driver/fade.c    |  7 +++++++
 driver/windows.c | 11 ++++++++---
 2 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/driver/fade.c b/driver/fade.c
index 46a56efa..6305a093 100644
--- a/driver/fade.c
+++ b/driver/fade.c
@@ -1662,6 +1662,13 @@ xshm_fade (XtAppContext app, Display *dpy,
     }
 
   /* Run the animation at the maximum frame rate in the time allotted. */
+  if (seconds == 0)
+  {
+    for (screen = 0; screen < nwindows; screen++)
+      if (xshm_whack (dpy, &shm_info, &info[screen], 0.0))
+        goto FAIL;
+  }
+  else
   {
     double start_time = double_time();
     double end_time = start_time + seconds;
diff --git a/driver/windows.c b/driver/windows.c
index c5dbd476..ce459d89 100644
--- a/driver/windows.c
+++ b/driver/windows.c
@@ -431,6 +431,7 @@ blank_screen (saver_info *si)
 {
   saver_preferences *p = &si->prefs;
   Bool user_active_p = False;
+  double fade_seconds;
   int i;
 
   initialize_screensaver_window (si);
@@ -446,8 +447,12 @@ blank_screen (saver_info *si)
         screenshot_grab (si->dpy, ssi->screensaver_window, False, p->verbose_p);
     }
 
-  if (p->fade_p &&
-      !si->demoing_p &&
+  if (p->fade_p)
+    fade_seconds = p->fade_seconds / 1000.0;
+  else
+    fade_seconds = 0.0;
+
+  if (!si->demoing_p &&
       !si->emergency_p)
     {
       Window *current_windows = (Window *)
@@ -469,7 +474,7 @@ blank_screen (saver_info *si)
       /* This will take several seconds to complete. */
       user_active_p = fade_screens (si->app, si->dpy,
                                     current_windows, si->nscreens,
-                                    p->fade_seconds / 1000.0,
+                                    fade_seconds,
                                     True,  /* out_p */
                                     True,  /* from_desktop_p */
                                     &si->fade_state);
-- 
2.39.2

